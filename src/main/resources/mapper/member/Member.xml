<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 위 코드가 mapper 설정을 하는 코드 -->

<!-- Mapper를 사용하는 Repository의 전체 경로를 적어줘야함. -->
<mapper namespace="me.synology.freash97.member.mapper.MemberMapperReposiroty">
    <select id="memberSelect" resultType="me.synology.freash97.member.entity.MemberEntity">
        SELECT *
        FROM MEMBER_M
    </select>

    <!--
    auth : 박치원
    title : MEMBER에 대한 SEQUENCE 번호
    desc : MEMBER에 대한 SEQUENCE 번호 생성
    -->
    <select id="createSEQ" resultType="Integer">
        SELECT NEXTVAL('member_seq') FROM DUAL
    </select>

    <!--
    auth : 박치원
    title : 멤버 SEQ중 중복 확인
    desc : 멤버 테이블의 SEQ번호중 중복 번호가 있으면 1 없으면 0 처리한다.
    -->
    <select id="selectSEQ" parameterType="Integer" resultType="Integer">
        SELECT COUNT(SEQ) FROM MEMBER_M WHERE SEQ = #{SEQ}
    </select>

    <!--
    auth : 박치원
    title : Register시 멤버를 추가할 쿼리
    desc : Register시 멤버를 추가할 쿼리 회원가입
    -->
    <insert id="memberAdd" parameterType="me.synology.freash97.member.entity.MemberEntity">
        INSERT INTO MEMBER_M(SEQ, ID, PASSWORD, NAME, EMAIL, PHONE, ZIPCODE, ROADADDR, DETAILADDR, CREATE_DATE,
                             UPDATE_DATE, OPERATOR)
            VALUE (#{SEQ}, #{ID}, #{PASSWORD}, #{NAME}, #{EMAIL}, #{PHONE}, #{ZIPCODE}, #{ROADADDR}, #{DETAILADDR}, #{CREATE_DATE},
            #{UPDATE_DATE}, #{OPERATOR});
    </insert>
    <!--
    auth : 박치원
    title : Register시 아이디 중복확인을 위한 쿼리
    desc : Register시 아이디 중복확인을 위한 쿼리문
    -->
    <select id="checkId" parameterType="me.synology.freash97.member.entity.MemberEntity" resultType="Integer">
        SELECT COUNT(ID) FROM MEMBER_M WHERE ID = #{ID}
    </select>
</mapper>